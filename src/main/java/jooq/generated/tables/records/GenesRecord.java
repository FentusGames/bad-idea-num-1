/*
 * This file is generated by jOOQ.
 */
package jooq.generated.tables.records;


import jooq.generated.tables.Genes;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GenesRecord extends UpdatableRecordImpl<GenesRecord> implements Record5<Integer, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>genes.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>genes.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>genes.gene_id</code>.
     */
    public void setGeneId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>genes.gene_id</code>.
     */
    public String getGeneId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>genes.encodedSymbol</code>.
     */
    public void setEncodedsymbol(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>genes.encodedSymbol</code>.
     */
    public String getEncodedsymbol() {
        return (String) get(2);
    }

    /**
     * Setter for <code>genes.description</code>.
     */
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>genes.description</code>.
     */
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>genes.disease</code>.
     */
    public void setDisease(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>genes.disease</code>.
     */
    public String getDisease() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Genes.GENES.ID;
    }

    @Override
    public Field<String> field2() {
        return Genes.GENES.GENE_ID;
    }

    @Override
    public Field<String> field3() {
        return Genes.GENES.ENCODEDSYMBOL;
    }

    @Override
    public Field<String> field4() {
        return Genes.GENES.DESCRIPTION;
    }

    @Override
    public Field<String> field5() {
        return Genes.GENES.DISEASE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getGeneId();
    }

    @Override
    public String component3() {
        return getEncodedsymbol();
    }

    @Override
    public String component4() {
        return getDescription();
    }

    @Override
    public String component5() {
        return getDisease();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getGeneId();
    }

    @Override
    public String value3() {
        return getEncodedsymbol();
    }

    @Override
    public String value4() {
        return getDescription();
    }

    @Override
    public String value5() {
        return getDisease();
    }

    @Override
    public GenesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public GenesRecord value2(String value) {
        setGeneId(value);
        return this;
    }

    @Override
    public GenesRecord value3(String value) {
        setEncodedsymbol(value);
        return this;
    }

    @Override
    public GenesRecord value4(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public GenesRecord value5(String value) {
        setDisease(value);
        return this;
    }

    @Override
    public GenesRecord values(Integer value1, String value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GenesRecord
     */
    public GenesRecord() {
        super(Genes.GENES);
    }

    /**
     * Create a detached, initialised GenesRecord
     */
    public GenesRecord(Integer id, String geneId, String encodedsymbol, String description, String disease) {
        super(Genes.GENES);

        setId(id);
        setGeneId(geneId);
        setEncodedsymbol(encodedsymbol);
        setDescription(description);
        setDisease(disease);
    }
}
